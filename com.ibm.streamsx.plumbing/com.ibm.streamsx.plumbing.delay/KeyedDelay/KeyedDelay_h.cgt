/*
# Licensed Materials - Property of IBM
# Copyright IBM Corp. 2017
*/

#include <AgedMap.h>

<%SPL::CodeGen::headerPrologue($model);%>

class MY_OPERATOR : public MY_BASE_OPERATOR 
{
public:
  // Constructor
  MY_OPERATOR();

  // Destructor
  virtual ~MY_OPERATOR(); 

  // Tuple processing for mutating ports
  void process(const Tuple & tuple, uint32_t port);

private:
  // AgedMap for infight messages
  typedef com::ibm::streamsx::plumbing::agedmap::AgedMap<SPL::rstring, IPort0Type> InflightTupleMap;
  InflightTupleMap _inflightTupleMap;
  // The earliest timestamp among messages that are being delayed
  uint64_t _earliestTimestampOfDelayedMessages;
  // Delay time limit in milli-seconds
  uint64_t _delay;
  // Delay time override allowed or not.
  const bool _allowDelayOverride;
  // mutex lock
  SPL::Mutex _mutex;
  // Two metrics for this operator.
  Metric *_numTuplesDelayed;
  Metric *_currentDelay;
}; 

<%SPL::CodeGen::headerEpilogue($model);%>
